PLAN JEU D’ÉCHEC
1-	Diagramme de classes

						Classes : 
Game
Game()   //affiche la map tout au long du jeux



Player : Game 


Position
(int posX, int posY)


Board


Box


ChessPiece :     


Pion : ChessPiece 
-const int maxMouvementY = 1      //+/- 1 slon l'équipe
vector<Position> posPossible()
Ataquer()
Pion(Position posDepart)
ChangerPièce()

Tour : ChessPiece 
-const int maxMouvementX : 7
-const int maxMouvementY : 7
vector<Position> posPossible()   //contrainte : un ou l'autre
Tour(Position posDepart)

Cavalier : ChessPiece 
-const int maxMouvement1 : 2
-const int maxMouvement2 : 1
vector<Position> posPossible() //contrainte : un et l'autre 
Cavalier(Position posDepart)

Fou : ChessPiece 
-const int maxMouvementX : 7
-const int maxMouvementY : 7
vector<Position> posPossible() //contrainte : un et l'autre (=)
Cavalier(Position posDepart)

Reine : ChessPiece 
-const int maxMouvementX : 7
-const int maxMouvementY : 7
vector<Position> posPossible() //contrainte : un ou l'autre OU un et l'autre // or call fou.posPossible et tour.posPossible
Reine() //if équipeBlanc

Roi : ChessPiece 
-const int maxMouvementX : 1
-const int maxMouvementY : 1
-static bool finPartie = false
vector<Position> posPossible() //contrainte : un et l'autre (diag) OU un ou l'autre (nseo)
Roi() //if équipeBlanc

//Autre cas défi à régler
-	Swap tour roi
-	Match nul
-	Pion mouvement x2 2 1er tour









class : 
Game
Player : 
Box :
Board:
Position : 
Piece 
 
tower, king, queen,...



is box/Piece necessary???

NOTES :
Board englobe tout le backend
Game englode tout le visuel (frontend) + Déroulement jeu? (maybe)

tips julien :
create board dans main, puis send ref dans ctor de Game